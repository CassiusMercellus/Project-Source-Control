
Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control    
$ touch .gitignore

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control
$ touch test.blah

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control
$ touch index.html

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control
$ touch style.css

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control    
$ git init
Initialized empty Git repository in C:/Development/Projects/Project Source Control/.git/

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git commit -m "added HTML and CSS"
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        index.html
        style.css

nothing added to commit but untracked files present (use "git add" to track)    

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git add -A

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git commit -m "created HTML and CSS files"
[master (root-commit) b44aa87] created HTML and CSS files
 3 files changed, 1 insertion(+)
 create mode 100644 .gitignore
 create mode 100644 index.html
 create mode 100644 style.css

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git remote add origin Project-Source-Control

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git push origin
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git push --set-upstream origin master
fatal: 'Project-Source-Control' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git remote add origin https://github.com/CassiusMercellus/Project-Source-Control.git
error: remote origin already exists.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git remote remove origin

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git remote add origin https://github.com/CassiusMercellus/Project-Source-Control.git

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git push --set-upstream origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 311 bytes | 311.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/CassiusMercellus/Project-Source-Control.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git branch develop

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git push
Everything up-to-date

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git checkout develop
Switched to branch 'develop'

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git add -A

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git push
fatal: The current branch develop has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin develop

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git push --set-upstream origin develop
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote: 
remote: Create a pull request for 'develop' on GitHub by visiting:
remote:      https://github.com/CassiusMercellus/Project-Source-Control/pull/new/develop
remote:
To https://github.com/CassiusMercellus/Project-Source-Control.git
 * [new branch]      develop -> develop
branch 'develop' set up to track 'origin/develop'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git push
Everything up-to-date

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git commit -m "added code to HTMl and CSS"
[develop 3064236] added code to HTMl and CSS
 2 files changed, 40 insertions(+)

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git push
Enumerating objects: 7, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 817 bytes | 817.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/CassiusMercellus/Project-Source-Control.git
   b44aa87..3064236  develop -> develop

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git merge develop
Updating b44aa87..3064236
Fast-forward
 index.html | 15 +++++++++++++++
 style.css  | 25 +++++++++++++++++++++++++
 2 files changed, 40 insertions(+)

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ branch demo
bash: branch: command not found

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git branch demo

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git checkout demo
Switched to branch 'demo'

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git push
fatal: The current branch demo has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin demo

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git push --set-upstream origin demo
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote: 
remote: Create a pull request for 'demo' on GitHub by visiting:
remote:      https://github.com/CassiusMercellus/Project-Source-Control/pull/new/demo
remote:
To https://github.com/CassiusMercellus/Project-Source-Control.git
 * [new branch]      demo -> demo
branch 'demo' set up to track 'origin/demo'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ checkout develop
bash: checkout: command not found

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git checkout develop
Switched to branch 'develop'
M       index.html
M       style.css
Your branch is up to date with 'origin/develop'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git merge demo
Already up to date.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git checkout demo
Switched to branch 'demo'
M       index.html
M       style.css
Your branch is up to date with 'origin/demo'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git merge develop
Already up to date.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git checkout master
Switched to branch 'master'
M       index.html
M       style.css
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git checkout develop
Switched to branch 'develop'
M       index.html
M       style.css
Your branch is up to date with 'origin/develop'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (develop)
$ git checkout master
Switched to branch 'master'
M       index.html
M       style.css
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git merge develop
Already up to date.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git log
commit 3064236683d664dfcd58d4ff712900e222d1e63c (HEAD -> master, origin/develop,commit 3064236683d664dfcd58d4ff712900e222d1e63c (HEAD -> master, origin/develop, origin/demo, develop, demo)
Author: CassiusMercellus <148610250+CassiusMercellus@users.noreply.github.com>  
Date:   Sat Jan 13 12:17:14 2024 -0800

    added code to HTMl and CSS

commit b44aa87e282169423eef70ebf8a6b8a93ae3cfa6 (origin/master)
Author: CassiusMercellus <148610250+CassiusMercellus@users.noreply.github.com>  
Date:   Sat Jan 13 12:01:35 2024 -0800


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (master)
$ git checkout demo
Switched to branch 'demo'
M       index.html
M       style.css
Your branch is up to date with 'origin/demo'.

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git commit -m "updated HTML and CSS"
On branch demo
Your branch is up to date with 'origin/demo'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html
        modified:   style.css

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        "\357\200\233"

no changes added to commit (use "git add" and/or "git commit -a")

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git add -a
error: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --[no-]dry-run    dry run
    -v, --[no-]verbose    be verbose

    -i, --[no-]interactive
                          interactive picking
    -p, --[no-]patch      select hunks interactively
    -e, --[no-]edit       edit current diff and apply
    -f, --[no-]force      allow adding otherwise ignored files
    -u, --[no-]update     update tracked files
    --[no-]renormalize    renormalize EOL of tracked files (implies -u)
    -N, --[no-]intent-to-add
                          record only the fact that the path will be added later    -A, --[no-]all        add changes from all tracked and untracked files      
    --[no-]ignore-removal ignore paths removed in the working tree (same as --no-all)
    --[no-]refresh        don't add, only refresh the index
    --[no-]ignore-errors  just skip files which cannot be added because of errors
    --[no-]ignore-missing check if - even missing - files are ignored in dry run    --[no-]sparse         allow updating entries outside of the sparse-checkout 
cone
    --[no-]chmod (+|-)x   override the executable bit of the listed files       
    --[no-]pathspec-from-file <file>
                          read pathspec from file
    --[no-]pathspec-file-nul
                          with --pathspec-from-file, pathspec elements are separated with NUL character


Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git add -A
warning: in the working copy of '', LF will be replaced by CRLF the next time Git touches it

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git commit -m "updated HTML and CSS"
[demo 31b5c0f] updated HTML and CSS
 3 files changed, 33 insertions(+)
 create mode 100644 "\357\200\233"

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git push
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 4 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 1.08 KiB | 1.08 MiB/s, done.
Total 5 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/CassiusMercellus/Project-Source-Control.git
   3064236..31b5c0f  demo -> demo

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git commit -m "removed useless file"
On branch demo
Your branch is up to date with 'origin/demo'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    "\357\200\233"

no changes added to commit (use "git add" and/or "git commit -a")

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git add -A

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git commit -m "removed useless file"
[demo 76b7fbe] removed useless file
 1 file changed, 11 deletions(-)
 delete mode 100644 "\357\200\233"

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$ git push
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 245 bytes | 245.00 KiB/s, done.
Total 2 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/CassiusMercellus/Project-Source-Control.git
   31b5c0f..76b7fbe  demo -> demo

Marce@LAPTOP-EE4LHTS0 MINGW64 /c/Development/Projects/Project Source Control (demo)
$